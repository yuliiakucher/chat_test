{"version":3,"sources":["components/MenuPage/MenuPage.module.css","components/MenuPage/OneUser/OneUser.module.css","components/ContentPage/ContentPage.module.css","redux/store.js","components/MenuPage/OneUser/OneUser.js","components/MenuPage/MenuPage.js","components/ContentPage/ContentPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","GET_MESSAGE","SET_USERS","SET_MSG","CLEAR_MESSAGES","CHANGE_FIRST_TIME","SEARCH_MESSAGES","initialState","firstTime","allMessages","currentUser","users","msg","searchResults","setMsg","payload","type","store","createStore","state","action","id","user_id","message","timestamp","user_name","photo","applyMiddleware","thunkMiddleware","OneUser","user","className","styles","container","img","src","alt","to","nav","center","last_msg","MenuPage","props","useState","search","handleSearch","name","map","left","header","value","onChange","e","target","placeholder","btn","onClick","searchMessages","icon","faSearch","chats","chat_header","length","result","subresult","style","withRouter","text","handleText","useEffect","openDatabase","transaction","tx","executeSql","match","params","clearMessage","i","rows","setMessage","item","messages","message_header","left_m","date","container_r","right_m","send_message","input","sendMessage","setTimeout","getResponse","faPaperPlane","compose","connect","setUsers","dispatch","db","axios","then","response","Date","toLocaleString","data","your_msg","changeFirstTime","error","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f83cfe41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"left\":\"MenuPage_left__1kwKL\",\"header\":\"MenuPage_header__3hZ4k\",\"img\":\"MenuPage_img__2cbjG\",\"search\":\"MenuPage_search__3H-3a\",\"btn\":\"MenuPage_btn__1DVCO\",\"chats\":\"MenuPage_chats__38DMA\",\"chat_header\":\"MenuPage_chat_header__1qPJR\",\"result\":\"MenuPage_result__36s8Z\",\"subresult\":\"MenuPage_subresult__3OdmR\",\"timestamp\":\"MenuPage_timestamp__1vvDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OneUser_container__3XOl0\",\"img\":\"OneUser_img__31ipx\",\"center\":\"OneUser_center__2gm98\",\"nav\":\"OneUser_nav__2lThL\",\"user_name\":\"OneUser_user_name__1V82Z\",\"last_msg\":\"OneUser_last_msg__14sjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"ContentPage_center__1n8xQ\",\"messages\":\"ContentPage_messages__174E-\",\"message_header\":\"ContentPage_message_header__etKqg\",\"user_name\":\"ContentPage_user_name__2oJVk\",\"send_message\":\"ContentPage_send_message__1_RB-\",\"left_m\":\"ContentPage_left_m__2PAtM\",\"right_m\":\"ContentPage_right_m__2kc0w\",\"img\":\"ContentPage_img__28lZj\",\"container\":\"ContentPage_container__3ifT_\",\"container_r\":\"ContentPage_container_r__Fx3gT\",\"date\":\"ContentPage_date__3Otcs\",\"input\":\"ContentPage_input__5UxTb\",\"btn\":\"ContentPage_btn__SDm4Z\"};","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport * as axios from 'axios'\r\n\r\nconst GET_MESSAGE = 'GET_MESSAGE'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_MSG = 'SET_MSG'\r\nconst CLEAR_MESSAGES = 'CLEAR_MESSAGES'\r\nconst CHANGE_FIRST_TIME = 'CHANGE_FIRST_TIME'\r\nconst SEARCH_MESSAGES = 'SEARCH_MESSAGES'\r\n\r\nconst initialState = {\r\n    firstTime: true,\r\n    allMessages: [],\r\n    currentUser: '',\r\n    users: [],\r\n    msg: '',\r\n    searchResults: []\r\n}\r\n\r\nconst ChatReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                allMessages: [...state.allMessages, {\r\n                    id: action.id,\r\n                    user_id: action.user_id,\r\n                    message: action.message,\r\n                    timestamp: action.timestamp\r\n                }],\r\n            }\r\n        }\r\n        case SET_MSG:\r\n            return {\r\n                ...state,\r\n                msg: action.payload\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...state.users, {id: action.id, user_name: action.user_name, photo: action.photo}]\r\n            }\r\n        case CLEAR_MESSAGES:\r\n            return {\r\n                ...state,\r\n                allMessages: []\r\n            }\r\n        case CHANGE_FIRST_TIME:\r\n            return {\r\n                ...state,\r\n                firstTime: action.payload\r\n            }\r\n        case SEARCH_MESSAGES:\r\n            return {\r\n                ...state,\r\n                searchResults: [...state.searchResults, {\r\n                    id: action.id,\r\n                    user_id: action.user_id,\r\n                    message: action.message,\r\n                    timestamp: action.timestamp\r\n                }]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setMessage = (id, user_id, message, timestamp) => ({type: GET_MESSAGE, id, user_id, message, timestamp})\r\nexport const setUsers = (id, user_name, photo) => ({type: SET_USERS, id, user_name, photo})\r\nexport const setMsg = (payload) => ({type: SET_MSG, payload})\r\nexport const changeFirstTime = (payload) => ({type: CHANGE_FIRST_TIME, payload})\r\nexport const clearMessage = () => ({type: CLEAR_MESSAGES,})\r\nconst setSearchedMessages = (id, user_id, message, timestamp) => ({\r\n    type: SEARCH_MESSAGES,\r\n    id,\r\n    user_id,\r\n    message,\r\n    timestamp\r\n})\r\n\r\nexport const sendMessage = (user_id, your_msg) => {\r\n    return () => {\r\n        let db = openDatabase('DB', '1.0', 'Test DB', 2 * 1024 * 1024);\r\n        db.transaction((tx) => {\r\n            tx.executeSql(\"INSERT INTO chat (user_id, timestamp, message) values(?, ?, ?)\", [user_id, new Date().toLocaleString(), your_msg], null, null);\r\n        });\r\n    }\r\n}\r\n\r\nexport const getResponse = (user_id) => {\r\n    return dispatch => {\r\n        let db = openDatabase('DB', '1.0', 'Test DB', 2 * 1024 * 1024);\r\n        axios.get('https://api.chucknorris.io/jokes/random')\r\n            .then(response => {\r\n                db.transaction((tx) => {\r\n                    tx.executeSql(\"INSERT INTO chat (user_id, timestamp, message) values(?, ?, ?)\", [user_id, new Date().toLocaleString(), response.data.value], null, null);\r\n                    dispatch(setMsg(response.data.value))\r\n                });\r\n            })\r\n    }\r\n}\r\n\r\nexport const searchMessages = (search) => {\r\n    return dispatch => {\r\n        let db = openDatabase('DB', '1.0', 'Test DB', 2 * 1024 * 1024);\r\n        db.transaction(function (tx) {\r\n            tx.executeSql(`SELECT * FROM chat WHERE message LIKE '%${search}%'`, [], function (tx, result) {\r\n                for (let i = 0; i < result.rows.length; i++) {\r\n                    dispatch(setSearchedMessages(i, result.rows.item(i)['user_id'], result.rows.item(i)['message'], result.rows.item(i)['timestamp']))\r\n                }\r\n            }, null)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nconst store = createStore(ChatReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport styles from './OneUser.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst OneUser = ({user}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <img className={styles.img} src={user.photo} alt='user-photo'/>\r\n            <NavLink to={`/${user.id}`} className={styles.nav}>\r\n                <div className={styles.center}>\r\n                    <p className={styles.user_name}>{user.user_name}</p>\r\n                    <p className={styles.last_msg}>last message</p>\r\n                </div>\r\n            </NavLink>\r\n            <p>date</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OneUser\r\n","import React, {useState} from 'react'\r\nimport styles from './MenuPage.module.css'\r\nimport style from './OneUser/OneUser.module.css'\r\nimport OneUser from \"./OneUser/OneUser\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faSearch} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst MenuPage = (props) => {\r\n\r\n    const [search, handleSearch] = useState('')\r\n\r\n    const handleSubmit = () => {\r\n        props.searchMessages(search)\r\n        handleSearch('')\r\n    }\r\n\r\n    let name = null\r\n    props.users.map(user => {\r\n            if (props.searchResults[0] && props.searchResults[0].user_id === user.id) {\r\n                name = user.user_name\r\n            }\r\n        }\r\n    )\r\n\r\n    let photo = null\r\n    props.users.map(user => {\r\n            if (props.searchResults[0] && props.searchResults[0].user_id === user.id) {\r\n                photo = user.photo\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className={styles.left}>\r\n            <div className={styles.header}>\r\n                <img className={styles.img}\r\n                     src={'https://upload.wikimedia.org/wikipedia/commons/7/70/User_icon_BLACK-01.png'} alt='user'/>\r\n                <div>\r\n                    <input\r\n                        className={styles.search}\r\n                        value={search}\r\n                        onChange={(e) => handleSearch(e.target.value)}\r\n                        placeholder='Search or start new chat'/>\r\n                    <button className={styles.btn} onClick={handleSubmit}><FontAwesomeIcon icon={faSearch}/></button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={styles.chats}>\r\n                <p className={styles.chat_header}>Chats</p>\r\n                {props.searchResults.length !== 0 && props.searchResults.map(result => (\r\n                    <div className={styles.result}>\r\n                        <div className={styles.subresult}>\r\n                            <img className={style.img} src={photo} alt='search-photo'/>\r\n                            <p>{name}:</p>\r\n                        </div>\r\n                        <p> {result.message}</p>\r\n                        <p className={styles.timestamp}>{result.timestamp}</p>\r\n                    </div>\r\n                ))}\r\n                {props.users.map(user => (\r\n                    <OneUser key={user.id} user={user}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuPage\r\n","import React, {useEffect, useState} from 'react'\r\nimport styles from \"./ContentPage.module.css\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faPaperPlane} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ContentPage = (props) => {\r\n\r\n    const [text, handleText] = useState('')\r\n\r\n    useEffect(() => {\r\n        let db = openDatabase('DB', '1.0', 'Test DB', 2 * 1024 * 1024);\r\n        db.transaction(function (tx) {\r\n            tx.executeSql(`SELECT * FROM chat WHERE user_id=${props.match.params.user_id}`, [], function (tx, result) {\r\n                props.clearMessage()\r\n                for (let i = 0; i < result.rows.length; i++) {\r\n                    props.setMessage(i, result.rows.item(i)['user_id'], result.rows.item(i)['message'], result.rows.item(i)['timestamp'])\r\n                }\r\n            }, null)\r\n        });\r\n    }, [props.match.params.user_id, props.msg])\r\n\r\n    const handleSend = () => {\r\n        props.sendMessage(props.match.params.user_id, text)\r\n        props.setMsg(text)\r\n        setTimeout(() => {\r\n            props.getResponse(props.match.params.user_id)\r\n        }, 10000)\r\n        handleText('')\r\n\r\n    }\r\n\r\n    let name = null\r\n    props.users.map(user => {\r\n            if (props.messages[1] && props.messages[1].user_id === user.id) {\r\n                name = user.user_name\r\n            }\r\n        }\r\n    )\r\n\r\n    let photo = null\r\n    props.users.map(user => {\r\n            if (props.messages[0] && props.messages[0].user_id === user.id) {\r\n                photo = user.photo\r\n            }\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className={styles.center}>\r\n            <div className={styles.message_header}>\r\n                <img className={styles.img} src={photo} alt={'user_header_photo'}/>\r\n                <p className={styles.user_name}>{name}</p>\r\n            </div>\r\n            <div className={styles.messages}>\r\n                {props.messages.map(message => {\r\n                        if (message.id % 2 !== 0) {\r\n                            return (\r\n                                <div key={message.id} className={styles.container}>\r\n                                    <img className={styles.img} src={photo} alt='msg-photo'/>\r\n                                    <div>\r\n                                        <div className={styles.left_m}>{message.message}</div>\r\n                                        <p className={styles.date}>{message.timestamp}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else return (\r\n                            <div className={styles.container_r}>\r\n                                <div key={message.id} className={styles.right_m}>{message.message}</div>\r\n                                <p className={styles.date}>{message.timestamp}</p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                )\r\n                }\r\n\r\n            </div>\r\n            <div className={styles.send_message}>\r\n                <input value={text}\r\n                       onChange={(e) => handleText(e.target.value)}\r\n                       className={styles.input}\r\n                       placeholder='Type your message'/>\r\n                <button className={styles.btn} onClick={handleSend}><FontAwesomeIcon icon={faPaperPlane}/></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ContentPage)\r\n","import './App.css';\nimport React, {useEffect} from \"react\";\nimport {\n    changeFirstTime,\n    clearMessage,\n    getResponse,\n    searchMessages,\n    sendMessage,\n    setMessage,\n    setMsg,\n    setUsers\n} from \"./redux/store\";\nimport {connect} from \"react-redux\";\nimport MenuPage from \"./components/MenuPage/MenuPage\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport ContentPage from \"./components/ContentPage/ContentPage\";\nimport {compose} from \"redux\";\n\nfunction App(props) {\n\n    useEffect(() => {\n        let db = openDatabase('DB', '1.0', 'Test DB', 2 * 1024 * 1024);\n\n        db.transaction((tx) => {\n            tx.executeSql(\"SELECT COUNT(*) FROM users\", [], (result) => {\n            }, (tx, error) => {\n                props.changeFirstTime(false)\n                tx.executeSql(\"CREATE TABLE users (id REAL UNIQUE, user_name TEXT, photo TEXT)\", [], null, null);\n            })\n        });\n\n        db.transaction((tx) => {\n            tx.executeSql(\"SELECT COUNT(*) FROM chat\", [], (result) => {\n            }, (tx, error) => {\n                props.changeFirstTime(false)\n                tx.executeSql(\"CREATE TABLE chat (user_id REAL, timestamp REAL, message TEXT)\", [], null, null);\n            })\n        });\n\n\n        db.transaction((tx) => {\n            tx.executeSql(\"SELECT * FROM users\", [], (tx, result) => {\n                if (result.rows.length === 0) {\n                    tx.executeSql(\"INSERT INTO chat (user_id, timestamp, message) values(?, ?, ?)\", [1, new Date().toLocaleString(), 'hello hello hello'], null, null);\n                    tx.executeSql(\"INSERT INTO chat (user_id, timestamp, message) values(?, ?, ?)\", [1, new Date().toLocaleString(), 'byebyebyebye'], null, null);\n                    tx.executeSql(\"INSERT INTO chat (user_id, timestamp, message) values(?, ?, ?)\", [2, new Date().toLocaleString(), 'how are you?'], null, null);\n                    tx.executeSql(\"INSERT INTO chat (user_id, timestamp, message) values(?, ?, ?)\", [2, new Date().toLocaleString(), 'gracia'], null, null);\n                    tx.executeSql(\"INSERT INTO chat (user_id, timestamp, message) values(?, ?, ?)\", [3, new Date().toLocaleString(), 'good'], null, null);\n                    tx.executeSql(\"INSERT INTO chat (user_id, timestamp, message) values(?, ?, ?)\", [3, new Date().toLocaleString(), 'see you tomorrow'], null, null);\n                }\n            }, null)\n        });\n\n        props.firstTime && db.transaction((tx) => {\n            tx.executeSql(\"INSERT INTO users (id, user_name, photo) values(?, ?, ?)\", [1, 'vova', 'https://www.pavilionweb.com/wp-content/uploads/2017/03/man-300x300.png'], null, null);\n            tx.executeSql(\"INSERT INTO users (id, user_name, photo) values(?, ?, ?)\", [2, 'masha', 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/50/User_icon-cp.svg/1200px-User_icon-cp.svg.png'], null, null);\n            tx.executeSql(\"INSERT INTO users (id, user_name, photo) values(?, ?, ?)\", [3, 'sonia', 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Crystal_Clear_kdm_user_female.svg/1200px-Crystal_Clear_kdm_user_female.svg.png'], null, null);\n        });\n\n        db.transaction((tx) => {\n            tx.executeSql(\"SELECT * FROM users\", [], (tx, result) => {\n                for (let i = 0; i < result.rows.length; i++) {\n                    props.setUsers(result.rows.item(i)['id'], result.rows.item(i)['user_name'], result.rows.item(i)['photo'])\n                }\n            }, null)\n        });\n    }, [])\n\n    return (\n        <div className={'wrapper'}>\n            <div className={'container'}>\n                <MenuPage {...props}/>\n                <Route\n                    path={'/:user_id'}\n                    render={() => <ContentPage {...props}/>}\n                />\n\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        messages: state.allMessages,\n        user: state.currentUser,\n        users: state.users,\n        msg: state.msg,\n        firstTime: state.firstTime,\n        searchResults: state.searchResults\n    }\n}\n\nexport default compose(withRouter, connect(mapStateToProps,\n    {setMessage, setUsers, clearMessage, getResponse, sendMessage, setMsg, changeFirstTime, searchMessages}))(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}